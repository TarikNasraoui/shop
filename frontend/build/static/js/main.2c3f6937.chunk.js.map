{"version":3,"sources":["redux/store.js","redux/reducers/productReducers.js","redux/constants/productConstants.js","redux/reducers/cartReducers.js","redux/constants/cartConstants.js","redux/reducers/userReducers.js","redux/constants/userConstants.js","redux/reducers/orderReducers.js","redux/constants/OrderConstants.js","redux/actions/userActions.js","components/SearchBox.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","redux/actions/productActions.js","components/Loader.js","components/Message.js","components/Paginate.js","components/ProductCarousel.js","screens/HomeScreen.js","screens/ProductScreen.js","redux/actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/ProfileScreen.js","redux/actions/orderAction.js","components/ModalConfirm.js","screens/UserListScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/RegisterScreen.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/OrdersListScreen.js","screens/UserEditScreen.js","App.js","serviceWorker.js","index.js"],"names":["reducer","combineReducers","productList","state","products","action","type","loading","payload","page","pages","error","productDetails","product","reviews","deletedProduct","success","createdProduct","updatedProduct","productReviewed","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","id","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdated","userList","users","orderCreate","order","orderDails","orderDetail","orderPay","myOrders","orders","listOrders","orderDeliver","userDelete","userUpdate","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleWare","thunk","store","createStore","composeWithDevTools","applyMiddleware","getUserDetails","dispatch","getState","a","config","headers","authorization","token","axios","get","data","response","message","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","className","Button","variant","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","fluid","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Row","Col","Rating","text","color","style","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","listProducts","pageNumber","detailsProducts","Loader","Spinner","animation","role","Message","children","Alert","Paginate","Pagination","Array","keys","key","active","ProductCarousel","useEffect","Carousel","pause","Image","alt","Caption","HomeScreen","match","params","sm","md","lg","xl","ProductScreen","qte","setQte","setRating","comment","setComment","loadingReview","successReview","errorReview","console","log","ListGroup","description","countInStock","disabled","length","review","productId","post","Group","controlId","Label","row","addToCart","qty","setItem","stringify","CartScreen","location","search","Number","split","removeFromCartHandler","removeFromCart","i","rounded","FormControl","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","submitHandler","login","ProfileScreen","setName","confirmPassword","setConfirmPassword","setMessage","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","createdAt","substring","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","ModalConfirm","handleClose","handleConfirm","body","Modal","show","onHide","closeButton","UserListScreen","index","setIndex","setShow","handleShow","successDelete","delete","ProductListScreen","successCreate","loadingCreate","productCreate","errorCreate","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","loadingUpdate","successUpdate","errorUpdate","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","label","custom","RegisterScreen","register","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentScreen","shippingMethod","setShippingMethod","Check","defaultChecked","PlaceOrderScreen","num","itemsPrice","current","shippingPrice","taxePrice","Math","round","TotalPrice","stap1","createOrder","orderItems","OrderScreen","sdkReady","setSdk","orderId","successPay","loadingPay","successDeliver","loadingDeliver","addPaypalScript","clientID","script","document","createElement","async","onload","appendChild","window","paypal","href","taxPrice","amount","onSuccess","paymentResult","payOrder","deliverOrder","OrdersListScreen","UserEditScreen","userId","setIsAdmin","updateUser","checked","App","path","component","exact","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.2c3f6937.chunk.js","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nimport {\n  productListReducer,\n  productDetailsReducer,\n  DeleteProductReducer,\n  CreateProductReducer,\n  UpdateProductReducer,\n  ProductReviewReducer,\n  productTopRatedReducer,\n} from \"./reducers/productReducers\";\nimport { cartReducer } from \"./reducers/cartReducers\";\nimport {\n  userLoginReducer,\n  userRegisterReducer,\n  userDetailsReducer,\n  userUpdateProfileReducer,\n  userListReducer,\n  userDeleteReducer,\n  userUpdateReducer,\n} from \"./reducers/userReducers\";\nimport {\n  creatOrderReducer,\n  OrderDetailReducer,\n  OrderPayReducer,\n  OrderMyListReducer,\n  OrderListReducer,\n  OrderDeliverReducer,\n} from \"./reducers/orderReducers\";\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  deletedProduct: DeleteProductReducer,\n  createdProduct: CreateProductReducer,\n  updatedProduct: UpdateProductReducer,\n  productReviewed: ProductReviewReducer,\n  productTopRated: productTopRatedReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdated: userUpdateProfileReducer,\n  userList: userListReducer,\n  orderCreate: creatOrderReducer,\n  orderDails: OrderDetailReducer,\n  orderPay: OrderPayReducer,\n  myOrders: OrderMyListReducer,\n  listOrders: OrderListReducer,\n  orderDeliver: OrderDeliverReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n});\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\n  : [];\n\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\n  : null;\n\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\")\n  ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\n  : {};\n\nconst paymentMethodFromStorage = localStorage.getItem(\"paymentMethod\")\n  ? JSON.parse(localStorage.getItem(\"paymentMethod\"))\n  : \"\";\n\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage,\n    paymentMethod: paymentMethodFromStorage,\n  },\n  userLogin: { userInfo: userInfoFromStorage },\n};\nconst middleWare = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleWare))\n);\n\nexport default store;\n","import {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_CREATE_RESET,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_UPDATE_RESET,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_REVIEW_FAIL,\n  PRODUCT_CREATE_REVIEW_RESET,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_TOP_REQUEST,\n  PRODUCT_TOP_SUCCESS,\n  PRODUCT_TOP_FAIL,\n} from \"../constants/productConstants\";\nexport const productListReducer = (state = { products: [] }, action) => {\n  switch (action.type) {\n    case PRODUCT_LIST_REQUEST:\n      return { loading: true, products: [] };\n    case PRODUCT_LIST_SUCCESS:\n      return {\n        loading: false,\n        products: action.payload.products,\n        page: action.payload.page,\n        pages: action.payload.pages,\n      };\n    case PRODUCT_LIST_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const productDetailsReducer = (\n  state = { product: { reviews: [] } },\n  action\n) => {\n  switch (action.type) {\n    case PRODUCT_DETAILS_REQUEST:\n      return { loading: true, ...state };\n    case PRODUCT_DETAILS_SUCCESS:\n      return { loading: false, product: action.payload };\n    case PRODUCT_DETAILS_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const DeleteProductReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_DELETE_REQUEST:\n      return { loading: true };\n    case PRODUCT_DELETE_SUCCESS:\n      return { loading: false, success: true };\n    case PRODUCT_DELETE_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const CreateProductReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_CREATE_REQUEST:\n      return { loading: true };\n    case PRODUCT_CREATE_SUCCESS:\n      return { loading: false, success: true, product: action.payload };\n    case PRODUCT_CREATE_FAIL:\n      return { loading: false, error: action.payload };\n    case PRODUCT_CREATE_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const UpdateProductReducer = (state = { product: {} }, action) => {\n  switch (action.type) {\n    case PRODUCT_UPDATE_REQUEST:\n      return { loading: true };\n    case PRODUCT_UPDATE_SUCCESS:\n      return { loading: false, success: true, product: action.payload };\n    case PRODUCT_UPDATE_FAIL:\n      return { loading: false, error: action.payload };\n    case PRODUCT_UPDATE_RESET:\n      return { product: {} };\n    default:\n      return state;\n  }\n};\n\nexport const ProductReviewReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_CREATE_REVIEW_REQUEST:\n      return { loading: true };\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\n      return { loading: false, success: true };\n    case PRODUCT_CREATE_REVIEW_FAIL:\n      return { loading: false, error: action.payload };\n    case PRODUCT_CREATE_REVIEW_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\n  switch (action.type) {\n    case PRODUCT_TOP_REQUEST:\n      return { loading: true, products: [] };\n    case PRODUCT_TOP_SUCCESS:\n      return { loading: false, products: action.payload };\n    case PRODUCT_TOP_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n","export const PRODUCT_LIST_REQUEST = \"PRODUCT_LIST_REQUEST\";\nexport const PRODUCT_LIST_SUCCESS = \"PRODUCT_LIST_SUCCESS\";\nexport const PRODUCT_LIST_FAIL = \"PRODUCT_LIST_FAIL\";\n\nexport const PRODUCT_DETAILS_REQUEST = \"PRODUCT_DETAILS_REQUEST\";\nexport const PRODUCT_DETAILS_SUCCESS = \"PRODUCT_DETAILS_SUCCESS\";\nexport const PRODUCT_DETAILS_FAIL = \"PRODUCT_DETAILS_FAIL\";\n\nexport const PRODUCT_DELETE_REQUEST = \"PRODUCT_DELETE_REQUEST\";\nexport const PRODUCT_DELETE_SUCCESS = \"PRODUCT_DELETE_SUCCESS\";\nexport const PRODUCT_DELETE_FAIL = \"PRODUCT_DELETE_FAIL\";\n\nexport const PRODUCT_CREATE_REQUEST = \"PRODUCT_CREATE_REQUEST\";\nexport const PRODUCT_CREATE_SUCCESS = \"PRODUCT_CREATE_SUCCESS\";\nexport const PRODUCT_CREATE_FAIL = \"PRODUCT_CREATE_FAIL\";\nexport const PRODUCT_CREATE_RESET = \"PRODUCT_CREATE_RESET\";\n\nexport const PRODUCT_UPDATE_REQUEST = \"PRODUCT_UPDATE_REQUEST\";\nexport const PRODUCT_UPDATE_SUCCESS = \"PRODUCT_UPDATE_SUCCESS\";\nexport const PRODUCT_UPDATE_FAIL = \"PRODUCT_UPDATE_FAIL\";\nexport const PRODUCT_UPDATE_RESET = \"PRODUCT_UPDATE_RESET\";\n\nexport const PRODUCT_CREATE_REVIEW_REQUEST = \"PRODUCT_CREATE_REVIEW_REQUEST\";\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = \"PRODUCT_CREATE_REVIEW_SUCCESS\";\nexport const PRODUCT_CREATE_REVIEW_FAIL = \"PRODUCT_CREATE_REVIEW_FAIL\";\nexport const PRODUCT_CREATE_REVIEW_RESET = \"PRODUCT_CREATE_REVIEW_RESET\";\n\nexport const PRODUCT_TOP_REQUEST = \"PRODUCT_TOP_REQUEST\";\nexport const PRODUCT_TOP_SUCCESS = \"PRODUCT_TOP_SUCCESS\";\nexport const PRODUCT_TOP_FAIL = \"PRODUCT_TOP_FAIL\";\n","import {\n  CART_ADD_ITEM,\n  REMOVE_CART_ITEM,\n  USER_SAVE_SHIPPING_ADDRESS,\n  SAVE_PAYMENT_METHOD,\n} from \"../constants/cartConstants\";\n\nexport const cartReducer = (\n  state = { cartItems: [], shippingAddress: {} },\n  action\n) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n      const existItem = state.cartItems.find((x) => x.product === item.product);\n\n      if (existItem) {\n        return {\n          ...state,\n          cartItems: state.cartItems.map((x) =>\n            x.product === existItem.product ? item : x\n          ),\n        };\n      } else {\n        return {\n          ...state,\n          cartItems: [...state.cartItems, item],\n        };\n      }\n    case REMOVE_CART_ITEM:\n      const id = action.payload;\n      return {\n        ...state,\n        cartItems: state.cartItems.filter((x) => x.product !== id),\n      };\n    case USER_SAVE_SHIPPING_ADDRESS:\n      return {\n        ...state,\n        shippingAddress: action.payload,\n      };\n    case SAVE_PAYMENT_METHOD:\n      return {\n        ...state,\n        paymentMethod: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","export const CART_ADD_ITEM = \"CART_ADD_ITEM\";\nexport const REMOVE_CART_ITEM = \"REMOVE_CART_ITEM\";\n\nexport const USER_SAVE_SHIPPING_ADDRESS = \"USER_SAVE_SHIPPING_ADDRESS\";\n\nexport const SAVE_PAYMENT_METHOD = \"SAVE_PAYMENT_METHOD\";\n","import {\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGOUT,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_REGISTER_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_DETAILS_FAIL,\n  USER_DETAILS_RESET,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_RESET,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_RESET,\n} from \"../constants/userConstants\";\n\nexport const userLoginReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return {\n        loading: true,\n      };\n    case USER_LOGIN_SUCCESS:\n      return {\n        loading: false,\n        userInfo: action.payload,\n      };\n    case USER_LOGIN_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n    case USER_LOGOUT:\n      return {};\n\n    default:\n      return state;\n  }\n};\n\nexport const userRegisterReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_REGISTER_REQUEST:\n      return {\n        loading: true,\n      };\n    case USER_REGISTER_SUCCESS:\n      return {\n        loading: false,\n        userInfo: action.payload,\n      };\n    case USER_REGISTER_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n    case USER_LOGOUT:\n      return {};\n\n    default:\n      return state;\n  }\n};\n\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_DETAILS_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case USER_DETAILS_SUCCESS:\n      return {\n        loading: false,\n        user: action.payload,\n      };\n    case USER_DETAILS_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n    case USER_DETAILS_RESET:\n      return { user: {} };\n    default:\n      return state;\n  }\n};\n\nexport const userUpdateProfileReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_UPDATE_PROFILE_REQUEST:\n      return {\n        loading: true,\n      };\n    case USER_UPDATE_PROFILE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n        userInfo: action.payload,\n      };\n    case USER_UPDATE_PROFILE_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const userListReducer = (state = { users: [] }, action) => {\n  switch (action.type) {\n    case USER_LIST_REQUEST:\n      return { loading: true };\n    case USER_LIST_SUCCESS:\n      return { loading: false, users: action.payload };\n    case USER_LIST_FAIL:\n      return { loading: false, error: action.payload };\n    case USER_LIST_RESET:\n      return { users: [] };\n    default:\n      return state;\n  }\n};\n\nexport const userDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_DELETE_REQUEST:\n      return { loading: true };\n    case USER_DELETE_SUCCESS:\n      return { loading: false, success: true };\n    case USER_DELETE_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const userUpdateReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_UPDATE_REQUEST:\n      return { loading: true };\n    case USER_UPDATE_SUCCESS:\n      return { loading: false, success: true };\n    case USER_UPDATE_FAIL:\n      return { loading: false, error: action.payload };\n    case USER_UPDATE_RESET:\n      return { user: {} };\n    default:\n      return state;\n  }\n};\n","export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\";\nexport const USER_LOGOUT = \"USER_LOGOUT\";\n\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\";\n\nexport const USER_DETAILS_REQUEST = \"USER_DETAILS_REQUEST\";\nexport const USER_DETAILS_SUCCESS = \"USER_DETAILS_SUCCESS\";\nexport const USER_DETAILS_FAIL = \"USER_DETAILS_FAIL\";\nexport const USER_DETAILS_RESET = \"USER_DETAILS_RESET\";\n\nexport const USER_LIST_REQUEST = \"USER_LIST_REQUEST\";\nexport const USER_LIST_SUCCESS = \"USER_LIST_SUCCESS\";\nexport const USER_LIST_FAIL = \"USER_LIST_FAIL\";\nexport const USER_LIST_RESET = \"USER_LIST_RESET\";\n\nexport const USER_UPDATE_PROFILE_REQUEST = \"USER_UPDATE_PROFILE_REQUEST\";\nexport const USER_UPDATE_PROFILE_SUCCESS = \"USER_UPDATE_PROFILE_SUCCESS\";\nexport const USER_UPDATE_PROFILE_FAIL = \"USER_UPDATE_PROFILE_FAIL\";\n\nexport const USER_DELETE_REQUEST = \"USER_DELETE_REQUEST\";\nexport const USER_DELETE_SUCCESS = \"USER_DELETE_SUCCESS\";\nexport const USER_DELETE_FAIL = \"USER_DELETE_FAIL\";\n\nexport const USER_UPDATE_REQUEST = \"USER_UPDATE_REQUEST\";\nexport const USER_UPDATE_SUCCESS = \"USER_UPDATE_SUCCESS\";\nexport const USER_UPDATE_FAIL = \"USER_UPDATE_FAIL\";\nexport const USER_UPDATE_RESET = \"USER_UPDATE_RESET\";\n","import {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_DETAIL_REQUEST,\n  ORDER_DETAIL_SUCCESS,\n  ORDER_DETAIL_FAIL,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_RESET,\n  ORDER_MY_LIST_REQUEST,\n  ORDER_MY_LIST_SUCCESS,\n  ORDER_MY_LIST_FAIL,\n  ORDER_MY_LIST_RESET,\n  ORDER_LIST_FAIL,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_REQUEST,\n  ORDER_DELIVER_REQUEST,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_FAIL,\n  ORDER_DELIVER_RESET,\n} from \"../constants/OrderConstants\";\n\nexport const creatOrderReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_CREATE_REQUEST:\n      return {\n        loading: true,\n      };\n    case ORDER_CREATE_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        success: true,\n        order: action.payload,\n      };\n    case ORDER_CREATE_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const OrderDetailReducer = (\n  state = { loading: true, orderDetail: [], shippingAddress: {} },\n  action\n) => {\n  switch (action.type) {\n    case ORDER_DETAIL_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case ORDER_DETAIL_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        order: action.payload,\n      };\n    case ORDER_DETAIL_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const OrderPayReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_PAY_REQUEST:\n      return {\n        loading: true,\n      };\n    case ORDER_PAY_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      };\n    case ORDER_PAY_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n    case ORDER_PAY_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const OrderMyListReducer = (state = { orders: [] }, action) => {\n  switch (action.type) {\n    case ORDER_MY_LIST_REQUEST:\n      return {\n        loading: true,\n      };\n    case ORDER_MY_LIST_SUCCESS:\n      return {\n        loading: false,\n        orders: action.payload,\n      };\n    case ORDER_MY_LIST_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n    case ORDER_MY_LIST_RESET:\n      return { orders: [] };\n    default:\n      return state;\n  }\n};\n\nexport const OrderListReducer = (state = { orders: [] }, action) => {\n  switch (action.type) {\n    case ORDER_LIST_REQUEST:\n      return {\n        loading: true,\n      };\n    case ORDER_LIST_SUCCESS:\n      return {\n        loading: false,\n        orders: action.payload,\n      };\n    case ORDER_LIST_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const OrderDeliverReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_DELIVER_REQUEST:\n      return {\n        loading: true,\n      };\n    case ORDER_DELIVER_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      };\n    case ORDER_DELIVER_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n    case ORDER_DELIVER_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n","export const ORDER_CREATE_REQUEST = \"ORDER_CREATE_REQUEST\";\nexport const ORDER_CREATE_SUCCESS = \"ORDER_CREATE_SUCCESS\";\nexport const ORDER_CREATE_FAIL = \"ORDER_CREATE_FAIL\";\n\nexport const ORDER_DETAIL_REQUEST = \"ORDER_DETAIL_REQUEST\";\nexport const ORDER_DETAIL_SUCCESS = \"ORDER_DETAIL_SUCCESS\";\nexport const ORDER_DETAIL_FAIL = \"ORDER_DETAIL_FAIL\";\n\nexport const ORDER_PAY_REQUEST = \"ORDER_PAY_REQUEST\";\nexport const ORDER_PAY_SUCCESS = \"ORDER_PAY_SUCCESS\";\nexport const ORDER_PAY_FAIL = \"ORDER_PAY_FAIL\";\nexport const ORDER_PAY_RESET = \"ORDER_PAY_RESET\";\n\nexport const ORDER_MY_LIST_REQUEST = \"ORDER_MY_LIST_REQUEST\";\nexport const ORDER_MY_LIST_SUCCESS = \"ORDER_MY_LIST_SUCCESS\";\nexport const ORDER_MY_LIST_FAIL = \"ORDER_MY_LIST_FAIL\";\nexport const ORDER_MY_LIST_RESET = \"ORDER_MY_LIST_RESET\";\n\nexport const ORDER_LIST_REQUEST = \"ORDER_LIST_REQUEST\";\nexport const ORDER_LIST_SUCCESS = \"ORDER_LIST_SUCCESS\";\nexport const ORDER_LIST_FAIL = \"ORDER_LIST_FAIL\";\n\nexport const ORDER_DELIVER_REQUEST = \"ORDER_DELIVER_REQUEST\";\nexport const ORDER_DELIVER_SUCCESS = \"ORDER_DELIVER_SUCCESS\";\nexport const ORDER_DELIVER_FAIL = \"ORDER_DELIVER_FAIL\";\nexport const ORDER_DELIVER_RESET = \"ORDER_DELIVER_RESET\";\n","import axios from \"axios\";\nimport {\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGOUT,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_REGISTER_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_DETAILS_FAIL,\n  USER_DETAILS_RESET,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_RESET,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAIL,\n} from \"../constants/userConstants\";\nimport { ORDER_MY_LIST_RESET } from \"../constants/OrderConstants\";\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST,\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    const { data } = await axios.post(\n      \"/api/users/login\",\n      { email, password },\n      config\n    );\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const register = (name, email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST,\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    const { data } = await axios.post(\n      \"/api/users\",\n      { name, email, password },\n      config\n    );\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data,\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.get(`/api/users/${id}`, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.put(`/api/users/profile`, user, config);\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const getUser = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n    const config = {\n      headers: {\n        authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.get(`/api/users`, config);\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n    const config = {\n      headers: {\n        authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    await axios.delete(`/api/users/${id}`, config);\n    dispatch({ type: USER_DELETE_SUCCESS });\n  } catch (error) {\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config);\n    dispatch({ type: USER_UPDATE_SUCCESS });\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\n    dispatch({ type: USER_DETAILS_RESET });\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({ type: USER_LOGOUT });\n  dispatch({ type: USER_DETAILS_RESET });\n  dispatch({ type: ORDER_MY_LIST_RESET });\n  dispatch({ type: USER_LIST_RESET });\n};\n","import React, { useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\n\nconst SearchBox = ({ history }) => {\n  const [keyword, setKeyword] = useState(\"\");\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (keyword.trim()) {\n      history.push(`/search/${keyword}`);\n    } else {\n      history.push(\"/\");\n    }\n  };\n\n  return (\n    <Form onSubmit={submitHandler} inline>\n      <Form.Control\n        type=\"text\"\n        name=\"q\"\n        onChange={(e) => setKeyword(e.target.value)}\n        placeholder=\"Search Products...\"\n        className=\"mr-sm-2 ml-sm-5\"\n      ></Form.Control>\n      <Button type=\"submit\" variant=\"outline-success\" className=\"p-2\">\n        Search\n      </Button>\n    </Form>\n  );\n};\n\nexport default SearchBox;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Route } from \"react-router-dom\";\nimport { Navbar, Nav, Container, NavDropdown } from \"react-bootstrap\";\nimport { logout } from \"../redux/actions/userActions\";\n\nimport SearchBox from \"./SearchBox\";\n\nconst Header = () => {\n  const dispatch = useDispatch();\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n  const logoutHandler = () => {\n    dispatch(logout());\n  };\n  return (\n    <header>\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\n        <Container fluid>\n          <LinkContainer to=\"/\">\n            <Navbar.Brand>Happy Shop</Navbar.Brand>\n          </LinkContainer>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Route render={({ history }) => <SearchBox history={history} />} />\n            <Nav className=\"ml-auto\">\n              <LinkContainer to=\"/cart\">\n                <Nav.Link>\n                  <i className=\"fas fa-shopping-cart\"></i> Cart\n                </Nav.Link>\n              </LinkContainer>\n              {userInfo ? (\n                <NavDropdown title={userInfo.name} id=\"username\">\n                  <LinkContainer to=\"/profile\">\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\n                  </LinkContainer>\n                  <NavDropdown.Item onClick={logoutHandler}>\n                    Logout\n                  </NavDropdown.Item>\n                </NavDropdown>\n              ) : (\n                <LinkContainer to=\"/login\">\n                  <Nav.Link>\n                    <i className=\"fas fa-user\"></i> Sing in\n                  </Nav.Link>\n                </LinkContainer>\n              )}\n              {userInfo && userInfo.isAdmin && (\n                <NavDropdown title={userInfo.name} id=\"admin\">\n                  <LinkContainer to=\"/admin/userlist\">\n                    <NavDropdown.Item>User List</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to=\"/admin/productlist\">\n                    <NavDropdown.Item>Product List</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to=\"/admin/orderlist\">\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\n                  </LinkContainer>\n                </NavDropdown>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  );\n};\nexport default Header;\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nconst Footer = () => {\n  return (\n    <Container fluid>\n      <Row>\n        <Col className=\"text-center py-3\">Copyright &copy</Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Rating = ({ value, text, color }) => {\n  return (\n    <div className=\"rating\">\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 1\n              ? \"fas fa-star\"\n              : value >= 0.5\n              ? \"fas fa-star-half-alt\"\n              : \"far fa-star\"\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 2\n              ? \"fas fa-star\"\n              : value >= 1.5\n              ? \"fas fa-star-half-alt\"\n              : \"far fa-star\"\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 3\n              ? \"fas fa-star\"\n              : value >= 2.5\n              ? \"fas fa-star-half-alt\"\n              : \"far fa-star\"\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 4\n              ? \"fas fa-star\"\n              : value >= 3.5\n              ? \"fas fa-star-half-alt\"\n              : \"far fa-star\"\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 5\n              ? \"fas fa-star\"\n              : value >= 4.5\n              ? \"fas fa-star-half-alt\"\n              : \"far fa-star\"\n          }\n        ></i>\n      </span>\n      <span>{text && text}</span>\n    </div>\n  );\n};\nRating.defaultProps = {\n  color: \"#f8e825\",\n};\nRating.propTypes = {\n  // value: PropTypes.number.isRequired,\n  // text: PropTypes.string.isRequired,\n  color: PropTypes.string,\n};\nexport default Rating;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Card } from \"react-bootstrap\";\nimport Rating from \"./Rating\";\n\nconst Product = ({ product }) => {\n  return (\n    <>\n      <Card className=\"my-3 p-3 rounded\">\n        <Link to={`/product/${product._id}`}>\n          <Card.Img src={product.image} variant=\"top\" />\n        </Link>\n        <Card.Body>\n          <Link to={`/product/${product._id}`}>\n            <Card.Title as=\"div\">\n              <strong>{product.name}</strong>\n            </Card.Title>\n          </Link>\n          <Card.Text as=\"div\">\n            <Rating\n              value={product.rating}\n              text={`${product.numReviews} Reviews`}\n            />\n          </Card.Text>\n          <Card.Text as=\"h3\">{product.price} $</Card.Text>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nexport default Product;\n","import axios from \"axios\";\nimport {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_REVIEW_FAIL,\n  PRODUCT_TOP_REQUEST,\n  PRODUCT_TOP_SUCCESS,\n  PRODUCT_TOP_FAIL,\n} from \"../constants/productConstants\";\n\nexport const listProducts = (keyword = \"\", pageNumber = \"\") => async (\n  dispatch\n) => {\n  try {\n    dispatch({ type: PRODUCT_LIST_REQUEST });\n    const { data } = await axios.get(\n      `/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\n    );\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const detailsProducts = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\n    const { data } = await axios.get(`/api/products/${id}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_DELETE_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n    const config = {\n      headers: {\n        authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    await axios.delete(`/api/products/${id}`, config);\n    dispatch({ type: PRODUCT_DELETE_SUCCESS });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const createProduct = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n    const config = {\n      headers: {\n        authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.post(`/api/products`, {}, config);\n    dispatch({ type: PRODUCT_CREATE_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_UPDATE_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.put(\n      `/api/products/${product._id}`,\n      product,\n      config\n    );\n    dispatch({ type: PRODUCT_UPDATE_SUCCESS, payload: data });\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const createProductReview = (productId, review) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    await axios.post(`/api/products/${productId}/reviews`, review, config);\n    dispatch({ type: PRODUCT_CREATE_REVIEW_SUCCESS });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const listTopProducts = () => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_TOP_REQUEST });\n\n    const { data } = await axios.get(`/api/products/top`);\n\n    dispatch({\n      type: PRODUCT_TOP_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_TOP_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n","import React from \"react\";\nimport { Spinner } from \"react-bootstrap\";\nexport const Loader = () => {\n  return (\n    <div>\n      <Spinner animation=\"grow\" role=\"status\" className=\"loader\">\n        <span className=\"sr-only\">Loading...</span>\n      </Spinner>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Alert } from \"react-bootstrap\";\n\nconst Message = ({ variant, children }) => {\n  return <Alert variant={variant}>{children}</Alert>;\n};\n\nMessage.defaultProps = {\n  variant: \"info\",\n};\n\nexport default Message;\n","import React from \"react\";\nimport { Pagination } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\n// const Paginate = ({ pages, page, isAdmin = false, keyword = \"\" }) => {\n//   return (\n//     pages > 1 && (\n//       <Pagination>\n//         {[...Array(pages).keys()].map((x) => (\n//           <LinkContainer\n//             key={x + 1}\n//             to={\n//               !isAdmin\n//                 ? keyword\n//                   ? `/search/${keyword}/page/${x + 1}`\n//                   : `/page/${x + 1}`\n//                 : `/admin/productlist/${x + 1}`\n//             }\n//           >\n//             <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\n//           </LinkContainer>\n//         ))}\n//       </Pagination>\n//     )\n//   );\n// };\n\nconst Paginate = ({ pages, page, isAdmin = false, keyword }) => {\n  return (\n    pages > 1 && (\n      <Pagination>\n        {[...Array(pages).keys()].map((x) => (\n          <LinkContainer\n            key={x + 1}\n            to={\n              !isAdmin\n                ? keyword\n                  ? `/search/${keyword}/page/${x + 1}`\n                  : `/page/${x + 1}`\n                : `/admin/productlist/${x + 1}`\n            }\n          >\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\n          </LinkContainer>\n        ))}\n      </Pagination>\n    )\n  );\n};\n\nexport default Paginate;\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Carousel, Image } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Loader } from \"./Loader\";\nimport Message from \"./Message\";\nimport { listTopProducts } from \"../redux/actions/productActions\";\n\nconst ProductCarousel = () => {\n  const dispatch = useDispatch();\n\n  const productTopRated = useSelector((state) => state.productTopRated);\n  const { loading, error, products } = productTopRated;\n\n  useEffect(() => {\n    dispatch(listTopProducts());\n  }, [dispatch]);\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant=\"danger\">{error}</Message>\n  ) : (\n    <Carousel pause=\"hover\" className=\"bg-dark\">\n      {products.map((product) => (\n        <Carousel.Item key={product._id}>\n          <Link to={`/product/${product._id}`}>\n            <Image src={product.image} alt={product.name} fluid />\n            <Carousel.Caption className=\"carousel-caption\">\n              <h2>\n                {product.name} (${product.price})\n              </h2>\n            </Carousel.Caption>\n          </Link>\n        </Carousel.Item>\n      ))}\n    </Carousel>\n  );\n};\n\nexport default ProductCarousel;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Col, Row } from \"react-bootstrap\";\nimport Product from \"../components/Product\";\nimport { listProducts } from \"../redux/actions/productActions\";\nimport { Loader } from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport Paginate from \"../components/Paginate\";\nimport ProductCarousel from \"../components/ProductCarousel\";\n\nconst HomeScreen = ({ match }) => {\n  const keyword = match.params.keyword;\n  const pageNumber = match.params.pageNumber;\n  const dispatch = useDispatch();\n  const productList = useSelector((state) => state.productList);\n  const { loading, error, products, pages, page } = productList;\n\n  useEffect(() => {\n    dispatch(listProducts(keyword, pageNumber));\n  }, [dispatch, keyword, pageNumber]);\n  return (\n    <>\n      {!keyword && <ProductCarousel />}\n      <h1>Lastest products</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <>\n          <Row>\n            {products.map((product) => (\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                <Product product={product} />\n              </Col>\n            ))}\n          </Row>\n          <Paginate\n            pages={pages}\n            page={page}\n            keyword={keyword ? keyword : \"\"}\n          />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default HomeScreen;\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Col,\n  Row,\n  Image,\n  ListGroup,\n  Card,\n  Button,\n  Form,\n} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport {\n  detailsProducts,\n  createProductReview,\n} from \"../redux/actions/productActions\";\nimport { PRODUCT_CREATE_REVIEW_RESET } from \"../redux/constants/productConstants\";\nimport { Loader } from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport Rating from \"../components/Rating\";\n\nconst ProductScreen = ({ history, match }) => {\n  const [qte, setQte] = useState(0);\n  const [rating, setRating] = useState(0);\n  const [comment, setComment] = useState(\"\");\n  const dispatch = useDispatch();\n  const { product, loading, error } = useSelector(\n    (state) => state.productDetails\n  );\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n  const productReviewed = useSelector((state) => state.productReviewed);\n  const {\n    loading: loadingReview,\n    success: successReview,\n    error: errorReview,\n  } = productReviewed;\n\n  useEffect(() => {\n    console.log(loadingReview);\n    if (successReview || !loadingReview) {\n      setRating(0);\n      setComment(\"\");\n    }\n    if (!product._id || product._id !== match.params.id) {\n      dispatch(detailsProducts(match.params.id));\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\n    }\n  }, [match, dispatch, successReview, loadingReview, product._id]);\n\n  const addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}?qte=${qte}`);\n  };\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(createProductReview(match.params.id, { rating, comment }));\n  };\n  return (\n    <>\n      <Link to=\"/\" className=\"btn btn-light my-3\">\n        Go back\n      </Link>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message />\n      ) : (\n        <>\n          <Row>\n            <Col md={5}>\n              <Image src={product.image} alt={product.name} fluid />\n            </Col>\n            <Col md={4}>\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                  <h3>{product.name}</h3>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Rating\n                    value={product.rating}\n                    text={`${product.numReviews} Reviews`}\n                  />\n                </ListGroup.Item>\n                <ListGroup.Item>Price: {product.price}</ListGroup.Item>\n                <ListGroup.Item>\n                  Description: {product.description}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n            <Col md={3}>\n              <Card>\n                <ListGroup variant=\"flush\">\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Price:</Col>\n                      <Col>\n                        <strong>{product.price}</strong>\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Status:</Col>\n                      <Col>\n                        <strong>\n                          {product.countInStock ? \"In Stock\" : \"Out of stock\"}\n                        </strong>\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n                  {product.countInStock > 0 && (\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Status:</Col>\n                        <Col>\n                          <Form.Control\n                            as=\"select\"\n                            value={qte}\n                            onChange={(e) => setQte(e.target.value)}\n                          >\n                            {[...Array(product.countInStock).keys()].map(\n                              (x) => (\n                                <option key={x + 1} value={x + 1}>\n                                  {x + 1}\n                                </option>\n                              )\n                            )}\n                          </Form.Control>\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  )}\n                  <ListGroup.Item>\n                    <Button\n                      className=\"btn-block\"\n                      type=\"button\"\n                      onClick={addToCartHandler}\n                      disabled={product.countInStock === 0}\n                    >\n                      Add to Cart\n                    </Button>\n                  </ListGroup.Item>\n                </ListGroup>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col md=\"6\">\n              <h1>Review</h1>\n              {product.reviews.length === 0 && <Message>No Reviews</Message>}\n              <ListGroup variant=\"flush\">\n                {product.reviews.map((review) => (\n                  <ListGroup.Item key={review._id}>\n                    <strong>{review.name}</strong>\n                    <Rating value={review.rating} />\n                    <p>{review.comment}</p>\n                  </ListGroup.Item>\n                ))}\n                <ListGroup.Item>\n                  <h2>Write a Customer Review</h2>\n                  {successReview && (\n                    <Message> Review submitted successfully</Message>\n                  )}\n                  {loadingReview && <Loader />}\n                  {errorReview && <Message>{errorReview}</Message>}\n                  {userInfo ? (\n                    <Form onSubmit={submitHandler}>\n                      <Form.Group controlId=\"rating\">\n                        <Form.Label>Select</Form.Label>\n                        <Form.Control\n                          as=\"select\"\n                          value={rating}\n                          onChange={(e) => setRating(e.target.value)}\n                        >\n                          <option value=\"\">Select...</option>\n                          <option value=\"1\">1 - Poor</option>\n                          <option value=\"2\">2 - Fair</option>\n                          <option value=\"3\">3 - Good</option>\n                          <option value=\"4\">4 - Very Good</option>\n                          <option value=\"5\">5 - Excellent</option>\n                        </Form.Control>\n                      </Form.Group>\n                      <Form.Group>\n                        <Form.Label>Comment</Form.Label>\n                        <Form.Control\n                          as=\"textarea\"\n                          value={comment}\n                          row=\"3\"\n                          onChange={(e) => setComment(e.target.value)}\n                        ></Form.Control>\n                      </Form.Group>\n                      <Button\n                        disabled={loadingReview}\n                        type=\"submit\"\n                        variant=\"primary\"\n                      >\n                        Submit\n                      </Button>\n                    </Form>\n                  ) : (\n                    <Message>\n                      <Message>\n                        Please <Link to=\"/login\">sign in</Link> to write a view\n                      </Message>\n                    </Message>\n                  )}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n          </Row>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ProductScreen;\n","import axios from \"axios\";\nimport {\n  CART_ADD_ITEM,\n  REMOVE_CART_ITEM,\n  USER_SAVE_SHIPPING_ADDRESS,\n  SAVE_PAYMENT_METHOD,\n} from \"../constants/cartConstants\";\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n  const { data } = await axios.get(`/api/products/${id}`);\n  dispatch({\n    type: CART_ADD_ITEM,\n    payload: {\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      qty,\n    },\n  });\n\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\n};\n\nexport const removeFromCart = (id) => (dispatch, getState) => {\n  dispatch({\n    type: REMOVE_CART_ITEM,\n    payload: id,\n  });\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\n};\n\nexport const saveShippingAddress = (data) => (dispatch) => {\n  dispatch({\n    type: USER_SAVE_SHIPPING_ADDRESS,\n    payload: data,\n  });\n  localStorage.setItem(\"shippingAddress\", JSON.stringify(data));\n};\n\nexport const savePaymentMethod = (data) => (dispatch) => {\n  dispatch({\n    type: SAVE_PAYMENT_METHOD,\n    payload: data,\n  });\n  localStorage.setItem(\"paymentMethod\", JSON.stringify(data));\n};\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Row,\n  Col,\n  ListGroup,\n  Image,\n  Button,\n  Card,\n  FormControl,\n} from \"react-bootstrap\";\nimport Message from \"../components/Message\";\nimport { addToCart, removeFromCart } from \"../redux/actions/cartActions\";\n\nconst CartScreen = ({ match, location, history }) => {\n  const productId = match.params.id;\n\n  const qty = location.search ? Number(location.search.split(\"=\")[1]) : 1;\n\n  const dispatch = useDispatch();\n\n  const cart = useSelector((state) => state.cart);\n  const { cartItems } = cart;\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty));\n    }\n  }, [dispatch, productId, qty]);\n  const removeFromCartHandler = (id) => {\n    dispatch(removeFromCart(id));\n  };\n  const checkoutHandler = () => {\n    history.push(\"/login?redirect=shipping\");\n  };\n  return (\n    <Row>\n      <Col md={8}>\n        <h1>Shoping Cart</h1>\n        {cartItems.length === 0 ? (\n          <Message>\n            Your cart is empty <Link to=\"/\">Go Back</Link>\n          </Message>\n        ) : (\n          <ListGroup variant=\"flush\">\n            {cartItems.map((item, i) => (\n              <ListGroup.Item key={i}>\n                <Row>\n                  <Col md={2}>\n                    <Image src={item.image} alt={item.name} fluid rounded />\n                  </Col>\n                  <Col md={3}>\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\n                  </Col>\n                  <Col md={2}>${item.price}</Col>\n                  <Col md={2}>\n                    <FormControl\n                      as=\"select\"\n                      value={item.qty}\n                      onChange={(e) => {\n                        dispatch(\n                          addToCart(item.product, Number(e.target.value))\n                        );\n                      }}\n                    >\n                      {[...Array(item.countInStock).keys()].map((x) => (\n                        <option key={x + 1} value={x + 1}>\n                          {x + 1}\n                        </option>\n                      ))}\n                    </FormControl>\n                  </Col>\n                  <Col md={2}>\n                    <Button\n                      type=\"button\"\n                      variant=\"light\"\n                      onClick={() => {\n                        removeFromCartHandler(item.product);\n                      }}\n                    >\n                      <i className=\"fas fa-trash\"></i>\n                    </Button>\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        )}\n      </Col>\n      <Col md={4}>\n        <Card variant=\"flush\">\n          <ListGroup>\n            <ListGroup.Item>\n              <h2>\n                Subtotal $ ({cartItems.reduce((acc, item) => acc + item.qty, 0)}\n                ) $\n                {cartItems\n                  .reduce((acc, item) => acc + item.qty * item.price, 0)\n                  .toFixed(2)}\n              </h2>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Button\n                type=\"button\"\n                className=\"btn-block\"\n                variant=\"dark\"\n                disabled={cartItems.length === 0}\n                onClick={checkoutHandler}\n              >\n                Proceed To checkout\n              </Button>\n            </ListGroup.Item>\n          </ListGroup>\n        </Card>\n      </Col>\n    </Row>\n  );\n};\n\nexport default CartScreen;\n","import React from \"react\";\nimport { Container, Col } from \"react-bootstrap\";\n\nconst FormContainer = ({ children }) => {\n  return (\n    <Container className=\"justify-content-md-center\">\n      <Col xs={12} md={6}>\n        {children}\n      </Col>\n    </Container>\n  );\n};\n\nexport default FormContainer;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Row, Col, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport { Loader } from \"../components/Loader\";\nimport { login } from \"../redux/actions/userActions\";\nimport FormContainer from \"../components/FormContainer\";\n\nconst LoginScreen = ({ location, history }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\n  const dispatch = useDispatch();\n  const userLogin = useSelector((state) => state.userLogin);\n  const { loading, error, userInfo } = userLogin;\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(login(email, password));\n  };\n  return (\n    <FormContainer>\n      <h1>Sign In</h1>\n      {loading && <Loader />}\n      {error && <Message variant=\"danger\">{error}</Message>}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Enter email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n      </Form>\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Enter password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Button type=\"submit\" variant=\"primary\">\n          Sign In\n        </Button>\n      </Form>\n      <Row className=\"py-3\">\n        <Col>\n          new customer ?{\" \"}\n          <Link to={redirect ? `/register?redirect=${redirect}` : \"/register\"}>\n            Register\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  );\n};\n\nexport default LoginScreen;\n","import React, { useState, useEffect } from \"react\";\nimport { Form, Row, Col, Button, Table } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport { Loader } from \"../components/Loader\";\nimport {\n  getUserDetails,\n  updateUserProfile,\n} from \"../redux/actions/userActions\";\n\nimport { getMyOrders } from \"../redux/actions/orderAction\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nconst ProfileScreen = ({ location, history }) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(null);\n\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\n  const dispatch = useDispatch();\n\n  const userDetails = useSelector((state) => state.userDetails);\n  const { loading, error, user } = userDetails;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userUpdated = useSelector((state) => state.userUpdated);\n  const { success } = userUpdated;\n\n  const myOrders = useSelector((state) => state.myOrders);\n  const { loading: loadingOrders, error: errorOrders, orders } = myOrders;\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    } else {\n      if (!user.name) {\n        dispatch(getUserDetails(\"profile\"));\n        dispatch(getMyOrders());\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [dispatch, history, userInfo, redirect, user]);\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setMessage(\"Password not matched\");\n    } else {\n      dispatch(updateUserProfile({ _id: user._id, name, email, password }));\n    }\n  };\n  return (\n    <>\n      {loading || loadingOrders ? (\n        <Loader />\n      ) : (\n        <Row>\n          <Col md={3}>\n            <h1>User Profile</h1>\n\n            {message && <Message variant=\"danger\">{message}</Message>}\n            {success && <Message variant=\"danger\">Updated Profile</Message>}\n            {error && <Message variant=\"danger\">{error}</Message>}\n            <Form onSubmit={submitHandler}>\n              <Form.Group controlId=\"name\">\n                <Form.Label>Name</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter name\"\n                  value={name}\n                  onChange={(e) => setName(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n              <Form.Group controlId=\"email\">\n                <Form.Label>Email</Form.Label>\n                <Form.Control\n                  type=\"email\"\n                  placeholder=\"Enter email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n            </Form>\n            <Form onSubmit={submitHandler}>\n              <Form.Group controlId=\"password\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Enter password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n              <Form.Group controlId=\"confirmpassword\">\n                <Form.Label>Confirm Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Confirm password\"\n                  value={confirmPassword}\n                  onChange={(e) => setConfirmPassword(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n              <Button type=\"submit\" variant=\"primary\">\n                Sign In\n              </Button>\n            </Form>\n          </Col>\n          <Col md={9}>\n            <h2>My orders</h2>\n            {loadingOrders ? (\n              <Loader />\n            ) : errorOrders ? (\n              <Message>{errorOrders}</Message>\n            ) : (\n              <Table striped bordered hover responsive className=\"table-sm\">\n                <thead>\n                  <tr>\n                    <th>ID</th>\n                    <th>DATE</th>\n                    <th>TOTAL</th>\n                    <th>PAID</th>\n                    <th>DELIVERED</th>\n                    <th></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {orders.map((order) => (\n                    <tr key={order._id}>\n                      <td>{order._id}</td>\n                      <td>{order.createdAt.substring(0, 10)}</td>\n                      <td>{order.totalPrice}</td>\n                      <td>\n                        {order.isPaid ? (\n                          order.paidAt.substring(0, 10)\n                        ) : (\n                          <i\n                            className=\"fas fa-times\"\n                            style={{ color: \"red\" }}\n                          ></i>\n                        )}\n                      </td>\n                      <td>\n                        {order.isDelivered ? (\n                          order.deliveredAt.substring(0, 10)\n                        ) : (\n                          <i\n                            className=\"fas fa-times\"\n                            style={{ color: \"red\" }}\n                          ></i>\n                        )}\n                      </td>\n                      <td>\n                        <LinkContainer to={`/order/${order._id}`}>\n                          <Button variant=\"light\">Detail</Button>\n                        </LinkContainer>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </Table>\n            )}\n          </Col>\n        </Row>\n      )}\n    </>\n  );\n};\n\nexport default ProfileScreen;\n","import axios from \"axios\";\nimport {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_DETAIL_REQUEST,\n  ORDER_DETAIL_SUCCESS,\n  ORDER_DETAIL_FAIL,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_FAIL,\n  ORDER_MY_LIST_REQUEST,\n  ORDER_MY_LIST_SUCCESS,\n  ORDER_MY_LIST_FAIL,\n  ORDER_LIST_REQUEST,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_FAIL,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_FAIL,\n  ORDER_DELIVER_REQUEST,\n} from \"../constants/OrderConstants\";\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.post(`/api/orders`, order, config);\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAIL_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.get(`/api/orders/${id}`, config);\n    dispatch({\n      type: ORDER_DETAIL_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAIL_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const payOrder = (orderId, paymentResult) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.put(\n      `/api/orders/${orderId}/pay`,\n      paymentResult,\n      config\n    );\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const getMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_MY_LIST_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.get(`/api/orders/myorders`, config);\n    dispatch({\n      type: ORDER_MY_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_MY_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const getOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.get(`/api/orders`, config);\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DELIVER_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.put(\n      `/api/orders/${order._id}/deliver`,\n      {},\n      config\n    );\n    dispatch({\n      type: ORDER_DELIVER_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DELIVER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n","import React from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nconst ModalConfirm = ({ state, handleClose, handleConfirm, title, body }) => {\n  return (\n    <>\n      <Modal show={state} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>{title}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>{body}</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Cancel\n          </Button>\n          <Button variant=\"primary\" onClick={handleConfirm}>\n            Confirm\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default ModalConfirm;\n","import React, { useEffect, useState } from \"react\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Table, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport { Loader } from \"../components/Loader\";\nimport { getUser, deleteUser } from \"../redux/actions/userActions\";\nimport ModalConfirm from \"../components/ModalConfirm\";\n\nconst UserListScreen = ({ history }) => {\n  // get Index User\n  const [index, setIndex] = useState(null);\n  // handle popup confirmation dialog\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const dispatch = useDispatch();\n  const userList = useSelector((state) => state.userList);\n  const { loading, error, users } = userList;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userDelete = useSelector((state) => state.userDelete);\n  const { success: successDelete } = userDelete;\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(getUser());\n    } else {\n      history.push(\"/login\");\n    }\n  }, [dispatch, history, successDelete, userInfo]);\n\n  // launch delete popup\n  const deleteHandler = (id) => {\n    handleShow();\n    setIndex(id);\n  };\n  // delete Confirmation\n  const handleConfim = () => {\n    if (index) {\n      dispatch(deleteUser(index));\n    }\n    setShow(false);\n  };\n  return (\n    <>\n      <ModalConfirm\n        handleShow={handleShow}\n        handleClose={handleClose}\n        handleConfirm={handleConfim}\n        state={show}\n        title=\"Please confirm\"\n        body=\"Do you really want to continue\"\n      />\n      <h1>user List</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message>{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className=\"table-sm\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Name</th>\n              <th>Email</th>\n              <th>Admin</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {users.map((user) => (\n              <tr key={user._id}>\n                <td>{user._id}</td>\n                <td>{user.name}</td>\n                <td>{user.email}</td>\n                <td>\n                  {user.isAdmin ? (\n                    <i className=\"fas fa-check\" style={{ color: \"green\" }}></i>\n                  ) : (\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\n                  )}\n                </td>\n                <td>\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                    <Button variant=\"light\" className=\"btn-sm\">\n                      <i className=\"fas fa-edit\"></i>\n                    </Button>\n                  </LinkContainer>\n                  <Button\n                    variant=\"danger\"\n                    className=\"btn-sm\"\n                    onClick={() => deleteHandler(user._id)}\n                  >\n                    <i className=\"fas fa-trash\"></i>\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  );\n};\nexport default UserListScreen;\n","import React, { useEffect, useState } from \"react\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Table, Button, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport { Loader } from \"../components/Loader\";\nimport Paginate from \"../components/Paginate\";\nimport {\n  listProducts,\n  deleteProduct,\n  createProduct,\n} from \"../redux/actions/productActions\";\nimport { PRODUCT_CREATE_RESET } from \"../redux/constants/productConstants\";\nimport ModalConfirm from \"../components/ModalConfirm\";\n\nconst ProductListScreen = ({ history, match }) => {\n  const pageNumber = match.params.pageNumber;\n  // get Index User\n  const [index, setIndex] = useState(null);\n  // handle popup confirmation dialog\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const dispatch = useDispatch();\n\n  const productList = useSelector((state) => state.productList);\n  const { loading, error, products, pages, page } = productList;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const deletedProduct = useSelector((state) => state.deletedProduct);\n  const { success: successDelete } = deletedProduct;\n\n  const createdProduct = useSelector((state) => state.createdProduct);\n  const {\n    success: successCreate,\n    loading: loadingCreate,\n    product: productCreate,\n    error: errorCreate,\n  } = createdProduct;\n\n  useEffect(() => {\n    dispatch({ type: PRODUCT_CREATE_RESET });\n    if (!userInfo || !userInfo.isAdmin) {\n      history.push(\"/login\");\n    }\n    if (successCreate) {\n      history.push(`/admin/product/${productCreate._id}/edit`);\n    } else {\n      dispatch(listProducts(\"\", pageNumber));\n    }\n  }, [\n    dispatch,\n    history,\n    userInfo,\n    successDelete,\n    successCreate,\n    productCreate,\n    pageNumber,\n  ]);\n\n  // launch delete popup\n  const deleteHandler = (id) => {\n    handleShow();\n    setIndex(id);\n  };\n  // delete Confirmation\n  const handleConfim = () => {\n    if (index) {\n      dispatch(deleteProduct(index));\n    }\n    setShow(false);\n  };\n  const createProductHandler = () => {\n    dispatch(createProduct());\n  };\n  return (\n    <>\n      <ModalConfirm\n        handleShow={handleShow}\n        handleClose={handleClose}\n        handleConfirm={handleConfim}\n        state={show}\n        title=\"Please confirm\"\n        body=\"Do you really want to continue\"\n      />\n      <Row>\n        <Col>\n          <h1>Products List</h1>\n        </Col>\n        <Col className=\"text-right\">\n          <Button className=\"my-3\" onClick={createProductHandler}>\n            <i className=\"fas fa-plus\"></i> Create Poduct\n          </Button>\n        </Col>\n      </Row>\n      {loadingCreate && <Loader />}\n      {errorCreate && <Message variant=\"danger\">{errorCreate}</Message>}\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message>{error}</Message>\n      ) : (\n        <>\n          <Table striped bordered hover responsive className=\"table-sm\">\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>Name</th>\n                <th>Price</th>\n                <th>Category</th>\n                <th>Brand</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {products.map((product) => (\n                <tr key={product._id}>\n                  <td>{product._id}</td>\n                  <td>{product.name}</td>\n                  <td>${product.price}</td>\n                  <td>{product.category}</td>\n                  <td>{product.brand}</td>\n\n                  <td>\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                      <Button variant=\"light\" className=\"btn-sm\">\n                        <i className=\"fas fa-edit\"></i>\n                      </Button>\n                    </LinkContainer>\n                    <Button\n                      variant=\"danger\"\n                      className=\"btn-sm\"\n                      onClick={() => deleteHandler(product._id)}\n                    >\n                      <i className=\"fas fa-trash\"></i>\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n\n          <Paginate pages={pages} page={page} isAdmin={true} />\n        </>\n      )}\n    </>\n  );\n};\nexport default ProductListScreen;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport { Loader } from \"../components/Loader\";\nimport {\n  detailsProducts,\n  updateProduct,\n} from \"../redux/actions/productActions\";\nimport FormContainer from \"../components/FormContainer\";\nimport ModalConfirm from \"../components/ModalConfirm\";\nimport { PRODUCT_UPDATE_RESET } from \"../redux/constants/productConstants\";\n\nconst ProductEditScreen = ({ match, history }) => {\n  const productId = match.params.id;\n  const [name, setName] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [image, setImage] = useState(\"\");\n  const [brand, setBrand] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [countInStock, setCountInStock] = useState(0);\n  const [description, setDescription] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n\n  // handle popup confirmation dialog\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const productDetails = useSelector((state) => state.productDetails);\n  const { loading, error, product } = productDetails;\n\n  const updatedProduct = useSelector((state) => state.updatedProduct);\n  const {\n    loading: loadingUpdate,\n    success: successUpdate,\n    error: errorUpdate,\n  } = updatedProduct;\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    }\n    if (successUpdate) {\n      dispatch({ type: PRODUCT_UPDATE_RESET });\n      history.push(\"/admin/productlist\");\n    } else {\n      if (!product.name || product._id !== productId) {\n        dispatch(detailsProducts(productId));\n      } else {\n        setName(product.name);\n        setPrice(product.price);\n        setImage(product.image);\n        setBrand(product.brand);\n        setCategory(product.category);\n        setCountInStock(product.countInStock);\n        setDescription(product.description);\n      }\n    }\n  }, [dispatch, history, product, productId, userInfo, successUpdate]);\n\n  const handleConfim = (e) => {\n    e.preventDefault();\n    handleShow();\n  };\n  const submitHandler = () => {\n    dispatch(\n      updateProduct({\n        _id: productId,\n        name,\n        price,\n        image,\n        brand,\n        category,\n        countInStock,\n        description,\n      })\n    );\n    setShow(false);\n  };\n  const uploadFileHandler = async (e) => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append(\"image\", file);\n    setUploading(true);\n\n    try {\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      };\n      const { data } = await axios.post(`/api/upload`, formData, config);\n      setImage(data);\n      setUploading(false);\n    } catch (error) {\n      console.log(error);\n      setUploading(false);\n    }\n  };\n  return (\n    <>\n      <Link to=\"/admin/productlist\" className=\"btn btn-light my-3\">\n        <i className=\"fas fa-angle-left\"></i> Back\n      </Link>\n      <ModalConfirm\n        handleShow={handleShow}\n        handleClose={handleClose}\n        handleConfirm={submitHandler}\n        state={show}\n        title=\"Please confirm\"\n        body=\"Do you really want to continue\"\n      />\n      {loadingUpdate && <Loader />}\n      {errorUpdate && <Message>{error}</Message>}\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message>{error}</Message>\n      ) : (\n        <FormContainer>\n          <h1>Edit Product</h1>\n          <Form onSubmit={handleConfim}>\n            <Form.Group controlId=\"name\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"price\">\n              <Form.Label>Price</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter price\"\n                value={price}\n                onChange={(e) => setPrice(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"image\">\n              <Form.Label>Image</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter image\"\n                value={image}\n                onChange={(e) => setImage(e.target.value)}\n              ></Form.Control>\n              <Form.File\n                id=\"image-file\"\n                label=\"Choose image\"\n                custom\n                onChange={uploadFileHandler}\n              ></Form.File>\n              {uploading && <Loader />}\n            </Form.Group>\n            <Form.Group controlId=\"brand\">\n              <Form.Label>Brand</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter brand\"\n                value={brand}\n                onChange={(e) => setBrand(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"countInStock\">\n              <Form.Label>Count In Stock</Form.Label>\n              <Form.Control\n                type=\"number\"\n                placeholder=\"Enter countInStock\"\n                value={countInStock}\n                onChange={(e) => setCountInStock(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"category\">\n              <Form.Label>Category</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter category\"\n                value={category}\n                onChange={(e) => setCategory(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"description\">\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter description\"\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Button type=\"submit\" variant=\"primary\">\n              Update\n            </Button>\n          </Form>\n        </FormContainer>\n      )}\n    </>\n  );\n};\n\nexport default ProductEditScreen;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Row, Col, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport { Loader } from \"../components/Loader\";\nimport { register } from \"../redux/actions/userActions\";\nimport FormContainer from \"../components/FormContainer\";\n\nconst RegisterScreen = ({ location, history }) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(null);\n\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\n  const dispatch = useDispatch();\n  const userRegister = useSelector((state) => state.userRegister);\n  const { loading, error, userInfo } = userRegister;\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setMessage(\"Password not matched\");\n    } else {\n      dispatch(register(name, email, password));\n    }\n  };\n  return (\n    <FormContainer>\n      <h1>Sign Up</h1>\n      {loading && <Loader />}\n      {message && <Message variant=\"danger\">{message}</Message>}\n      {error && <Message variant=\"danger\">{error}</Message>}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId=\"name\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Enter email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Enter password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"confirmpassword\">\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Confirm password\"\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Button type=\"submit\" variant=\"primary\">\n          Sign In\n        </Button>\n      </Form>\n\n      <Row className=\"py-3\">\n        <Col>\n          You already have an account ?{\" \"}\n          <Link to={redirect ? `/login?redirect=${redirect}` : \"/login\"}>\n            Login\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  );\n};\n\nexport default RegisterScreen;\n","import React from \"react\";\nimport { Nav } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\n  return (\n    <Nav className=\"justify-content-center mb-4\">\n      <Nav.Item>\n        {step1 ? (\n          <LinkContainer to=\"/login\">\n            <Nav.Link>Sign In</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Sign In</Nav.Link>\n        )}\n      </Nav.Item>\n      <Nav.Item>\n        {step2 ? (\n          <LinkContainer to=\"/shipping\">\n            <Nav.Link>Shipping</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Shipping</Nav.Link>\n        )}\n      </Nav.Item>\n      <Nav.Item>\n        {step3 ? (\n          <LinkContainer to=\"/payment\">\n            <Nav.Link>Payment</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Payment</Nav.Link>\n        )}\n      </Nav.Item>\n      <Nav.Item>\n        {step4 ? (\n          <LinkContainer to=\"/placeorder\">\n            <Nav.Link>Place Order</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Place Order</Nav.Link>\n        )}\n      </Nav.Item>\n    </Nav>\n  );\n};\nexport default CheckoutSteps;\n","import React, { useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { saveShippingAddress } from \"../redux/actions/cartActions\";\nimport FormContainer from \"../components/FormContainer\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\n\nconst ShippingScreen = ({ history }) => {\n  const cart = useSelector((state) => state.cart);\n  const { shippingAddress } = cart;\n\n  const [address, setAddress] = useState(shippingAddress.address);\n  const [city, setCity] = useState(shippingAddress.city);\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\n  const [country, setCountry] = useState(shippingAddress.country);\n  const dispatch = useDispatch();\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(saveShippingAddress({ address, city, postalCode, country }));\n    history.push(\"/payment\");\n  };\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 />\n      <h1>Shipping</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId=\"address\">\n          <Form.Label>Address</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter Address\"\n            value={address}\n            onChange={(e) => setAddress(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"city\">\n          <Form.Label>City</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter city\"\n            value={city}\n            onChange={(e) => setCity(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"postalCode\">\n          <Form.Label>Postal Code</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter postalCode\"\n            value={postalCode}\n            onChange={(e) => setPostalCode(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"country\">\n          <Form.Label>Country</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter country\"\n            value={country}\n            onChange={(e) => setCountry(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Button type=\"submit\" variant=\"primary\">\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  );\n};\nexport default ShippingScreen;\n","import React, { useState } from \"react\";\nimport { Form, Button, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { savePaymentMethod } from \"../redux/actions/cartActions\";\nimport FormContainer from \"../components/FormContainer\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\n\nconst PaymentScreen = ({ history }) => {\n  const cart = useSelector((state) => state.cart);\n  const { shippingAddress, paymentMethod } = cart;\n  if (!shippingAddress.address) {\n    history.push(\"/shipping\");\n  }\n  const [shippingMethod, setShippingMethod] = useState(\"Paypal\");\n  const dispatch = useDispatch();\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(savePaymentMethod(shippingMethod));\n    history.push(\"/placeorder\");\n  };\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 step3 />\n      <h1>Payment Methods</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group>\n          <Form.Label as=\"legend\">Select a method</Form.Label>\n          <Col>\n            <Form.Check\n              type=\"radio\"\n              label=\"Paypal\"\n              id=\"paypal\"\n              name=\"paymentMethod\"\n              value=\"paypal\"\n              onChange={(e) => setShippingMethod(e.target.value)}\n              defaultChecked={paymentMethod === \"paypal\"}\n            />\n            <Form.Check\n              type=\"radio\"\n              label=\"Stripe\"\n              id=\"stripe\"\n              name=\"paymentMethod\"\n              value=\"stripe\"\n              onChange={(e) => setShippingMethod(e.target.value)}\n              defaultChecked={paymentMethod === \"stripe\"}\n            />\n          </Col>\n        </Form.Group>\n        <Button type=\"submit\">Continue</Button>\n      </Form>\n    </FormContainer>\n  );\n};\n\nexport default PaymentScreen;\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Col, Row, ListGroup, Image, Card } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\nimport { createOrder } from \"../redux/actions/orderAction\";\n\nconst PlaceOrderScreen = ({ history }) => {\n  const cart = useSelector((state) => state.cart);\n  const dispatch = useDispatch();\n  const addDecimal = (num) => {\n    return (Math.round(num * 100) / 100).toFixed(2);\n  };\n  cart.itemsPrice = cart.cartItems.reduce(\n    (acc, current) => acc + current.qty * current.price,\n    0\n  );\n  cart.shippingPrice = cart.itemsPrice > 100 ? 0 : 100;\n  cart.taxePrice = addDecimal(Number((0.15 * cart.itemsPrice).toFixed(2)));\n  cart.TotalPrice = (\n    Number(cart.itemsPrice) +\n    Number(cart.shippingPrice) +\n    Number(cart.taxePrice)\n  ).toFixed(2);\n\n  const orderCreate = useSelector((state) => state.orderCreate);\n  const { order, success, error } = orderCreate;\n  useEffect(() => {\n    if (success) {\n      history.push(`/order/${order._id}`);\n    }\n    // eslint-disable-next-line\n  }, [history, success, order]);\n  const placeOrderHandler = (e) => {\n    dispatch(\n      createOrder({\n        orderItems: cart.cartItems,\n        shippingAddress: cart.shippingAddress,\n        taxePrice: cart.taxePrice,\n        shippingPrice: cart.shippingPrice,\n        paymentMethod: cart.paymentMethod,\n        totalPrice: cart.TotalPrice,\n      })\n    );\n  };\n  return (\n    <>\n      <CheckoutSteps stap1 step2 step3 step4 />\n      <Row>\n        <Col>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}{\" \"}\n                {cart.shippingAddress.postalCode} {cart.shippingAddress.country}{\" \"}\n              </p>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <p>\n                selected Method: <b>{cart.paymentMethod}</b>\n              </p>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {cart.cartItems.length === 0 ? (\n                <Message>Your Cart is Empty</Message>\n              ) : (\n                <ListGroup variant=\"flush\">\n                  {cart.cartItems.map((item, i) => (\n                    <ListGroup.Item key={i}>\n                      <Row>\n                        <Col md={2}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n                        <Col md=\"4\">\n                          {item.qty} x {item.price} = ${item.qty * item.price}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col>\n          <Card>\n            <ListGroup>\n              <ListGroup.Item>\n                <h2>Order summary</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>${cart.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col>${cart.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Taxe</Col>\n                  <Col>${cart.taxePrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total</Col>\n                  <Col>${cart.TotalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                {error && <Message variant=\"danger\">{error}</Message>}\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Button\n                  type=\"button\"\n                  className=\"btn-block\"\n                  disabled={cart.cartItems.length === 0}\n                  onClick={placeOrderHandler}\n                >\n                  Place order\n                </Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default PlaceOrderScreen;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Col, Row, ListGroup, Image, Card, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { PayPalButton } from \"react-paypal-button-v2\";\nimport Message from \"../components/Message\";\nimport { Loader } from \"../components/Loader\";\nimport {\n  getOrderDetails,\n  payOrder,\n  deliverOrder,\n} from \"../redux/actions/orderAction\";\nimport {\n  ORDER_PAY_RESET,\n  ORDER_DELIVER_RESET,\n} from \"../redux/constants/OrderConstants\";\n\nconst OrderScreen = ({ match, history }) => {\n  const [sdkReady, setSdk] = useState(false);\n  const orderId = match.params.id;\n  const dispatch = useDispatch();\n\n  const orderDails = useSelector((state) => state.orderDails);\n  const { loading, order, error } = orderDails;\n\n  const orderPay = useSelector((state) => state.orderPay);\n  const { success: successPay, loading: loadingPay } = orderPay;\n\n  const orderDeliver = useSelector((state) => state.orderDeliver);\n  const { success: successDeliver, loading: loadingDeliver } = orderDeliver;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  if (!loading && order) {\n    const addDecimal = (num) => {\n      return (Math.round(num * 100) / 100).toFixed(2);\n    };\n    order.itemsPrice = addDecimal(\n      order.orderItems.reduce(\n        (acc, current) => acc + current.qty * current.price,\n        0\n      )\n    );\n  }\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    }\n    const addPaypalScript = async () => {\n      const { data: clientID } = await axios.get(\"/api/config/paypal\");\n      const script = document.createElement(\"script\");\n      script.type = \"text/javascript\";\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientID}`;\n      script.async = true;\n      script.onload = () => {\n        setSdk(true);\n      };\n      document.body.appendChild(script);\n    };\n    if (!order || successPay || order._id !== orderId || successDeliver) {\n      dispatch({ type: ORDER_PAY_RESET });\n      dispatch({ type: ORDER_DELIVER_RESET });\n      dispatch(getOrderDetails(orderId));\n    } else if (!order.isPaid) {\n      if (!window.paypal) {\n        addPaypalScript();\n      } else {\n        setSdk(true);\n      }\n    }\n  }, [dispatch, successPay, orderId, order, successDeliver, userInfo, history]);\n\n  const successPaymentHandler = (paymentResult) => {\n    console.log(paymentResult);\n    dispatch(payOrder(orderId, paymentResult));\n  };\n\n  const deliverHandler = () => {\n    dispatch(deliverOrder(order));\n  };\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message>{error}</Message>\n  ) : (\n    <>\n      <h1>Order {order._id}</h1>\n      <Row>\n        <Col>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                name: <strong>{order.user.name}</strong>\n              </p>\n              <p>\n                <a href={`mailto:${order.user.email}`} target=\"blank\">\n                  Email:\n                  <strong>{order.user.email}</strong>\n                </a>\n              </p>\n              <p>\n                {order.shippingAddress.address}, {order.shippingAddress.city}{\" \"}\n                {order.shippingAddress.postalCode}{\" \"}\n                {order.shippingAddress.country}\n              </p>\n              {order.isDelivered ? (\n                <Message variant=\"success\">\n                  Delivered at {order.paidAt}{\" \"}\n                </Message>\n              ) : (\n                <Message variant=\"danger\">Not Delivered</Message>\n              )}\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <p>\n                selected Method: <b>{order.paymentMethod}</b>\n              </p>\n              {order.isPaid ? (\n                <Message variant=\"success\">Paid at {order.paidAt} </Message>\n              ) : (\n                <Message variant=\"danger\">Not paid</Message>\n              )}\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {order.orderItems.length === 0 ? (\n                <Message>Your order is Empty</Message>\n              ) : (\n                <ListGroup variant=\"flush\">\n                  {order.orderItems.map((item, i) => (\n                    <ListGroup.Item key={i}>\n                      <Row>\n                        <Col md={2}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n                        <Col md=\"4\">\n                          {item.qty} x {item.price} = ${item.qty * item.price}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col>\n          <Card>\n            <ListGroup>\n              <ListGroup.Item>\n                <h2>Order summary</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>${order.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col>${order.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Taxe</Col>\n                  <Col>${order.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total</Col>\n                  <Col>${order.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              {!order.isPaid && (\n                <ListGroup.Item>\n                  {loadingPay && <Loader />}\n                  {!sdkReady ? (\n                    <Loader />\n                  ) : (\n                    <PayPalButton\n                      amount={order.totalPrice}\n                      onSuccess={successPaymentHandler}\n                    />\n                  )}\n                </ListGroup.Item>\n              )}\n              {loadingDeliver && <Loader />}\n              {userInfo &&\n                userInfo.isAdmin &&\n                order.isPaid &&\n                !order.isDelivered && (\n                  <ListGroup.Item>\n                    <Button\n                      type=\"button\"\n                      className=\"btn btn-block\"\n                      onClick={deliverHandler}\n                    >\n                      Mark As Delivered\n                    </Button>\n                  </ListGroup.Item>\n                )}\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default OrderScreen;\n","import React, { useEffect } from \"react\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Table, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport { Loader } from \"../components/Loader\";\nimport { getOrders } from \"../redux/actions/orderAction\";\n\nconst OrdersListScreen = ({ history }) => {\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const listOrders = useSelector((state) => state.listOrders);\n  const { loading, error, orders } = listOrders;\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(getOrders());\n    } else {\n      history.push(\"/login\");\n    }\n  }, [dispatch, history, userInfo]);\n\n  return (\n    <>\n      <h1>Orders List</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message>{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className=\"table-sm\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>USER</th>\n              <th>DATE</th>\n              <th>TOTAL</th>\n              <th>PAID</th>\n              <th>DELIVERED</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {orders.map((order) => (\n              <tr key={order._id}>\n                <td>{order._id}</td>\n                <td>{order.user && order.user.name}</td>\n                <td>{order.createdAt.substring(0, 10)}</td>\n                <td>${order.totalPrice}</td>\n                <td>\n                  {order.isPaid ? (\n                    order.paidAt.substring(0, 10)\n                  ) : (\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\n                  )}\n                </td>\n                <td>\n                  {order.isDelivered ? (\n                    order.deliveredAt.substring(0, 10)\n                  ) : (\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\n                  )}\n                </td>\n                <td>\n                  <LinkContainer to={`/order/${order._id}`}>\n                    <Button variant=\"light\" className=\"btn-sm\">\n                      Details\n                    </Button>\n                  </LinkContainer>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  );\n};\nexport default OrdersListScreen;\n","import React, { useState, useEffect } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport { Loader } from \"../components/Loader\";\nimport { getUserDetails, updateUser } from \"../redux/actions/userActions\";\nimport { USER_UPDATE_RESET } from \"../redux/constants/userConstants\";\nimport FormContainer from \"../components/FormContainer\";\nimport ModalConfirm from \"../components/ModalConfirm\";\n\nconst UserEditScreen = ({ match, history }) => {\n  const userId = match.params.id;\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [isAdmin, setIsAdmin] = useState(false);\n\n  // handle popup confirmation dialog\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userDetails = useSelector((state) => state.userDetails);\n  const { loading, error, user } = userDetails;\n\n  const userUpdate = useSelector((state) => state.userUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = userUpdate;\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    }\n    if (successUpdate) {\n      dispatch({ type: USER_UPDATE_RESET });\n      history.push(\"/admin/userlist\");\n    } else if (!user.name || user._id !== userId) {\n      dispatch(getUserDetails(userId));\n    } else {\n      setName(user.name);\n      setEmail(user.email);\n      setIsAdmin(user.isAdmin);\n    }\n  }, [dispatch, history, user, successUpdate, userId, userInfo]);\n  const submitHandler = (e) => {\n    e.preventDefault();\n    handleShow();\n  };\n  const handleConfim = () => {\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }));\n    setShow(false);\n  };\n  return (\n    <>\n      <ModalConfirm\n        handleShow={handleShow}\n        handleClose={handleClose}\n        handleConfirm={handleConfim}\n        state={show}\n        title=\"Please confirm\"\n        body=\"Do you really want to continue\"\n      />\n      {loadingUpdate && <Loader />}\n      {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message>{error}</Message>\n      ) : (\n        <FormContainer>\n          <h1>Edit User</h1>\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId=\"name\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Enter email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"isadmin\">\n              <Form.Check\n                type=\"checkbox\"\n                label=\"Is Admin\"\n                checked={isAdmin}\n                onChange={(e) => setIsAdmin(e.target.checked)}\n              ></Form.Check>\n            </Form.Group>\n            <Button type=\"submit\" variant=\"primary\">\n              Update\n            </Button>\n          </Form>\n        </FormContainer>\n      )}\n    </>\n  );\n};\n\nexport default UserEditScreen;\n","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport ProductScreen from \"./screens/ProductScreen\";\nimport CartScreen from \"./screens/CartScreen\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport ProfileScreen from \"./screens/ProfileScreen\";\nimport UserListScreen from \"./screens/UserListScreen\";\nimport ProductListScreen from \"./screens/ProductListScreen\";\nimport ProductEditScreen from \"./screens/ProductEditScreen\";\nimport RegisterScreen from \"./screens/RegisterScreen\";\nimport ShippingScreen from \"./screens/ShippingScreen\";\nimport PaymentScreen from \"./screens/PaymentScreen\";\nimport PlaceOrderScreen from \"./screens/PlaceOrderScreen\";\nimport OrderScreen from \"./screens/OrderScreen\";\nimport OrdersListScreen from \"./screens/OrdersListScreen\";\nimport UserEditScreen from \"./screens/UserEditScreen\";\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className=\"py-3\">\n        <Container fluid>\n          <Route path=\"/\" component={HomeScreen} exact />\n          <Route path=\"/login\" component={LoginScreen} exact />\n          <Route path=\"/profile\" component={ProfileScreen} exact />\n          <Route path=\"/admin/userlist\" component={UserListScreen} exact />\n          <Route\n            path=\"/admin/productlist\"\n            component={ProductListScreen}\n            exact\n          />\n          <Route\n            path=\"/admin/productlist/:pageNumber\"\n            component={ProductListScreen}\n            exact\n          />\n          <Route path=\"/admin/user/:id/edit\" component={UserEditScreen} exact />\n          <Route path=\"/register\" component={RegisterScreen} exact />\n          <Route path=\"/product/:id\" component={ProductScreen} />\n          <Route path=\"/admin/product/:id/edit\" component={ProductEditScreen} />\n          <Route path=\"/cart/:id?\" component={CartScreen} />\n          <Route path=\"/shipping\" component={ShippingScreen} />\n          <Route path=\"/order/:id\" component={OrderScreen} />\n          <Route path=\"/placeorder\" component={PlaceOrderScreen} />\n          <Route path=\"/payment\" component={PaymentScreen} />\n          <Route path=\"/admin/orderlist\" component={OrdersListScreen} exact />\n          <Route path=\"/search/:keyword\" component={HomeScreen} exact />\n          <Route path=\"/page/:pageNumber\" component={HomeScreen} exact />\n          <Route\n            path=\"/search/:keyword/page/:pageNumber\"\n            component={HomeScreen}\n            exact\n          />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport \"./bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}